apiVersion: v1
kind: List
items:
- kind: Deployment
  apiVersion: apps/v1
  metadata:
    name: logstash
    namespace: monitoring
    labels:
      app: logstash
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: logstash
    template:
      metadata:
        labels:
          app: logstash
      spec:
        volumes:
        - name: logstash-config
          configMap:
            name: logstash-config
        containers:
        - name: logstash
          image: docker.elastic.co/logstash/logstash:7.6.0
          ports:
          - containerPort: 5044
          env:
            - name: ELASTICSEARCH_HOSTS
              value: "elasticsearch-client.monitoring.svc.cluster.local:9200"
            - name: ELASTICSEARCH_USER
              value: "elastic"
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-pw-elastic
                  key: password
          volumeMounts:
            - name: logstash-config
              mountPath: /usr/share/logstash/pipeline
              readOnly: true
# ========================================================================
- kind: Service
  apiVersion: v1
  metadata:
    name: logstash
    namespace: monitoring
    labels:
      app: logstash
  spec:
    selector:
      app: logstash
    ports:
      - protocol: TCP
        port: 5044
        targetPort: 5044
# ========================================================================
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: logstash-config
    namespace: monitoring
    labels:
      app: logstash
  data:
    logstash.conf: |
       input {
        kafka {
                bootstrap_servers => "bootstrap-kafka.monitoring.svc.cluster.local:9092"
                # topics => "test"
                topics_pattern => [".*"]
                codec => json
            }
        }

        output {
            elasticsearch {
                hosts => ["${ELASTICSEARCH_HOSTS}"]
                user => "${ELASTICSEARCH_USER}"
                password => "${ELASTICSEARCH_PASSWORD}"
                index => "logstash"
                document_type => "logs"
            }
            stdout { codec => rubydebug }
        }
# ========================================================================